(define (domain gripper-strips)
  (:types room ball gripper)

   (:predicates (at-robby ?r - room)
		(at ?b - ball ?r - room)
		(free ?g - gripper)
		(carry ?b - ball ?g - gripper))


(:derived (invariant-1)
	(forall(?x - ball ?y1 - room ?y2 - room)
		(not (and  (at ?x ?y1)  (at ?x ?y2) (not (= ?y1 ?y2)) ))))
(:derived (invariant-2)
	(forall(?x - ball ?y1 - gripper ?y2 - gripper)
		(not (and  (carry ?x ?y1)  (carry ?x ?y2) (not (= ?y1 ?y2)) ))))
(:derived (invariant-3)
	(forall (?x - ball ?y1 - room ?y2 - gripper)
		(not (and (at ?x ?y1) (carry ?x ?y2)))))
(:derived (invariant-4)
	(forall(?x - gripper ?y1 - ball ?y2 - ball)
		(not (and  (carry ?y1 ?x)  (carry ?y2 ?x) (not (= ?y1 ?y2)) ))))
(:derived (invariant-5)
	(forall (?x - gripper ?y1 - ball)
		(not (and (free ?x) (carry ?y1 ?x)))))


   (:action move
       :parameters  (?o1 ?o2 - room)
       :precondition ()
       :effect ())



   (:action pick
       :parameters (?o1 - ball ?o2 - room ?o3 - gripper)
       :precondition  ()
       :effect ())


   (:action drop
       :parameters (?o1 - ball ?o2 - room ?o3 - gripper)
       :precondition  ()
       :effect ())
)
