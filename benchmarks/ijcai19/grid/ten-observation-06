(solution 
(:objects node3-1 -  place node3-2 -  place node1-3 -  place key3 -  key key1 -  key node1-2 -  place key2 -  key node0-2 -  place node0-1 -  place node0-0 -  place node2-0 -  place circle -  shape node2-1 -  place node2-2 -  place key0 -  key node3-0 -  place node1-0 -  place node2-3 -  place node3-3 -  place node0-3 -  place node1-1 -  place )
(:init (lock-shape node2-2 circle) (lock-shape node2-1 circle) (conn node0-1 node0-0) (conn node2-0 node1-0) (open node0-1) (conn node1-1 node0-1) (conn node1-1 node1-2) (conn node2-0 node3-0) (at key0 node0-1) (open node1-2) (conn node1-1 node1-0) (conn node1-1 node2-1) (conn node0-0 node0-1) (key-shape key3 circle) (conn node1-0 node2-0) (conn node2-2 node3-2) (key-shape key1 circle) (conn node2-3 node1-3) (conn node2-0 node2-1) (conn node3-2 node3-1) (open node1-0) (open node3-1) (conn node2-1 node2-0) (conn node3-2 node2-2) (open node2-2) (open node3-0) (conn node2-2 node1-2) (locked node3-2) (conn node3-1 node2-1) (open node3-3) (conn node1-0 node1-1) (conn node1-0 node0-0) (conn node2-2 node2-3) (open node0-0) (conn node3-0 node2-0) (open node1-1) (conn node2-1 node3-1) (conn node0-1 node0-2) (conn node2-2 node2-1) (at key3 node2-3) (conn node1-2 node0-2) (conn node0-3 node1-3) (conn node2-1 node1-1) (lock-shape node3-3 circle) (open node2-3) (conn node3-3 node3-2) (conn node3-2 node3-3) (conn node0-3 node0-2) (conn node2-3 node3-3) (at-robot node2-3) (open node2-0) (conn node1-3 node2-3) (lock-shape node2-3 circle) (conn node0-2 node0-1) (conn node1-2 node1-1) (conn node0-2 node1-2) (at key1 node0-2) (conn node1-2 node2-2) (conn node1-2 node1-3) (conn node0-2 node0-3) (open node1-3) (conn node1-3 node1-2) (conn node0-1 node1-1) (lock-shape node3-1 circle) (open node0-2) (conn node2-1 node2-2) (conn node3-1 node3-2) (lock-shape node3-2 circle) (key-shape key0 circle) (conn node1-3 node0-3) (holding key2) (conn node3-1 node3-0) (conn node2-3 node2-2) (open node0-3) (key-shape key2 circle) (conn node3-0 node3-1) (conn node0-0 node1-0) (conn node3-3 node2-3) (lock-shape node1-3 circle) (open node2-1))

(:observations (lock-shape node2-2 circle) (lock-shape node2-1 circle) (conn node0-1 node0-0) (conn node2-0 node1-0) (open node0-1) (conn node1-1 node0-1) (conn node1-1 node1-2) (conn node2-0 node3-0) (at key0 node0-1) (open node1-2) (conn node1-1 node1-0) (conn node1-1 node2-1) (conn node0-0 node0-1) (key-shape key3 circle) (conn node1-0 node2-0) (conn node2-2 node3-2) (key-shape key1 circle) (conn node2-3 node1-3) (conn node2-0 node2-1) (conn node3-2 node3-1) (open node1-0) (open node3-1) (conn node2-1 node2-0) (conn node3-2 node2-2) (open node2-2) (open node3-0) (conn node2-2 node1-2) (locked node3-2) (conn node3-1 node2-1) (open node3-3) (conn node1-0 node1-1) (conn node1-0 node0-0) (conn node2-2 node2-3) (open node0-0) (conn node3-0 node2-0) (open node1-1) (conn node2-1 node3-1) (conn node0-1 node0-2) (conn node2-2 node2-1) (at key3 node2-3) (conn node1-2 node0-2) (conn node0-3 node1-3) (conn node2-1 node1-1) (lock-shape node3-3 circle) (open node2-3) (conn node3-3 node3-2) (conn node3-2 node3-3) (conn node0-3 node0-2) (conn node2-3 node3-3) (at-robot node2-3) (open node2-0) (conn node1-3 node2-3) (lock-shape node2-3 circle) (conn node0-2 node0-1) (conn node1-2 node1-1) (conn node0-2 node1-2) (at key1 node0-2) (conn node1-2 node2-2) (conn node1-2 node1-3) (conn node0-2 node0-3) (open node1-3) (conn node1-3 node1-2) (conn node0-1 node1-1) (lock-shape node3-1 circle) (open node0-2) (conn node2-1 node2-2) (conn node3-1 node3-2) (lock-shape node3-2 circle) (key-shape key0 circle) (conn node1-3 node0-3) (holding key2) (conn node3-1 node3-0) (conn node2-3 node2-2) (open node0-3) (key-shape key2 circle) (conn node3-0 node3-1) (conn node0-0 node1-0) (conn node3-3 node2-3) (lock-shape node1-3 circle) (open node2-1))

(pickup-and-loose node2-3 key3 key2)

(:observations (lock-shape node2-2 circle) (lock-shape node2-1 circle) (conn node0-1 node0-0) (conn node2-0 node1-0) (open node0-1) (conn node1-1 node0-1) (conn node1-1 node1-2) (conn node2-0 node3-0) (at key0 node0-1) (open node1-2) (conn node1-1 node1-0) (conn node1-1 node2-1) (conn node0-0 node0-1) (key-shape key3 circle) (conn node1-0 node2-0) (conn node2-2 node3-2) (key-shape key1 circle) (conn node2-3 node1-3) (conn node2-0 node2-1) (conn node3-2 node3-1) (open node1-0) (open node3-1) (conn node2-1 node2-0) (conn node3-2 node2-2) (open node2-2) (open node3-0) (conn node2-2 node1-2) (locked node3-2) (conn node3-1 node2-1) (open node3-3) (conn node1-0 node1-1) (conn node1-0 node0-0) (conn node2-2 node2-3) (open node0-0) (conn node3-0 node2-0) (open node1-1) (conn node2-1 node3-1) (conn node0-1 node0-2) (conn node2-2 node2-1) (conn node1-2 node0-2) (conn node0-3 node1-3) (conn node2-1 node1-1) (lock-shape node3-3 circle) (open node2-3) (conn node3-3 node3-2) (conn node3-2 node3-3) (conn node0-3 node0-2) (conn node2-3 node3-3) (at-robot node2-3) (open node2-0) (conn node1-3 node2-3) (lock-shape node2-3 circle) (conn node0-2 node0-1) (conn node1-2 node1-1) (conn node0-2 node1-2) (at key1 node0-2) (conn node1-2 node2-2) (conn node1-2 node1-3) (conn node0-2 node0-3) (open node1-3) (conn node1-3 node1-2) (conn node0-1 node1-1) (lock-shape node3-1 circle) (open node0-2) (conn node2-1 node2-2) (conn node3-1 node3-2) (lock-shape node3-2 circle) (key-shape key0 circle) (conn node1-3 node0-3) (conn node3-1 node3-0) (conn node2-3 node2-2) (open node0-3) (key-shape key2 circle) (conn node3-0 node3-1) (conn node0-0 node1-0) (conn node3-3 node2-3) (lock-shape node1-3 circle) (open node2-1) (holding key3) (at key2 node2-3))

(move node2-3 node2-2)

(:observations (lock-shape node2-2 circle) (lock-shape node2-1 circle) (conn node0-1 node0-0) (conn node2-0 node1-0) (open node0-1) (conn node1-1 node0-1) (conn node1-1 node1-2) (conn node2-0 node3-0) (at key0 node0-1) (open node1-2) (conn node1-1 node1-0) (conn node1-1 node2-1) (conn node0-0 node0-1) (key-shape key3 circle) (conn node1-0 node2-0) (conn node2-2 node3-2) (key-shape key1 circle) (conn node2-3 node1-3) (conn node2-0 node2-1) (conn node3-2 node3-1) (open node1-0) (open node3-1) (conn node2-1 node2-0) (conn node3-2 node2-2) (open node2-2) (open node3-0) (conn node2-2 node1-2) (locked node3-2) (conn node3-1 node2-1) (open node3-3) (conn node1-0 node1-1) (conn node1-0 node0-0) (conn node2-2 node2-3) (open node0-0) (conn node3-0 node2-0) (open node1-1) (conn node2-1 node3-1) (conn node0-1 node0-2) (conn node2-2 node2-1) (conn node1-2 node0-2) (conn node0-3 node1-3) (conn node2-1 node1-1) (lock-shape node3-3 circle) (open node2-3) (conn node3-3 node3-2) (conn node3-2 node3-3) (conn node0-3 node0-2) (conn node2-3 node3-3) (open node2-0) (conn node1-3 node2-3) (lock-shape node2-3 circle) (conn node0-2 node0-1) (conn node1-2 node1-1) (conn node0-2 node1-2) (at key1 node0-2) (conn node1-2 node2-2) (conn node1-2 node1-3) (conn node0-2 node0-3) (open node1-3) (conn node1-3 node1-2) (conn node0-1 node1-1) (lock-shape node3-1 circle) (open node0-2) (conn node2-1 node2-2) (conn node3-1 node3-2) (lock-shape node3-2 circle) (key-shape key0 circle) (conn node1-3 node0-3) (conn node3-1 node3-0) (conn node2-3 node2-2) (open node0-3) (key-shape key2 circle) (conn node3-0 node3-1) (conn node0-0 node1-0) (conn node3-3 node2-3) (lock-shape node1-3 circle) (open node2-1) (holding key3) (at key2 node2-3) (at-robot node2-2))

(unlock node2-2 node3-2 key3 circle)

(:observations (lock-shape node2-2 circle) (lock-shape node2-1 circle) (conn node0-1 node0-0) (conn node2-0 node1-0) (open node0-1) (conn node1-1 node0-1) (conn node1-1 node1-2) (conn node2-0 node3-0) (at key0 node0-1) (open node1-2) (conn node1-1 node1-0) (conn node1-1 node2-1) (conn node0-0 node0-1) (key-shape key3 circle) (conn node1-0 node2-0) (conn node2-2 node3-2) (key-shape key1 circle) (conn node2-3 node1-3) (conn node2-0 node2-1) (conn node3-2 node3-1) (open node1-0) (open node3-1) (conn node2-1 node2-0) (conn node3-2 node2-2) (open node2-2) (open node3-0) (conn node2-2 node1-2) (conn node3-1 node2-1) (open node3-3) (conn node1-0 node1-1) (conn node1-0 node0-0) (conn node2-2 node2-3) (open node0-0) (conn node3-0 node2-0) (open node1-1) (conn node2-1 node3-1) (conn node0-1 node0-2) (conn node2-2 node2-1) (conn node1-2 node0-2) (conn node0-3 node1-3) (conn node2-1 node1-1) (lock-shape node3-3 circle) (open node2-3) (conn node3-3 node3-2) (conn node3-2 node3-3) (conn node0-3 node0-2) (conn node2-3 node3-3) (open node2-0) (conn node1-3 node2-3) (lock-shape node2-3 circle) (conn node0-2 node0-1) (conn node1-2 node1-1) (conn node0-2 node1-2) (at key1 node0-2) (conn node1-2 node2-2) (conn node1-2 node1-3) (conn node0-2 node0-3) (open node1-3) (conn node1-3 node1-2) (conn node0-1 node1-1) (lock-shape node3-1 circle) (open node0-2) (conn node2-1 node2-2) (conn node3-1 node3-2) (lock-shape node3-2 circle) (key-shape key0 circle) (conn node1-3 node0-3) (conn node3-1 node3-0) (conn node2-3 node2-2) (open node0-3) (key-shape key2 circle) (conn node3-0 node3-1) (conn node0-0 node1-0) (conn node3-3 node2-3) (lock-shape node1-3 circle) (open node2-1) (holding key3) (at key2 node2-3) (at-robot node2-2) (open node3-2))

(putdown node2-2 key3)

(:observations (lock-shape node2-2 circle) (lock-shape node2-1 circle) (conn node0-1 node0-0) (conn node2-0 node1-0) (open node0-1) (conn node1-1 node0-1) (conn node1-1 node1-2) (conn node2-0 node3-0) (at key0 node0-1) (open node1-2) (conn node1-1 node1-0) (conn node1-1 node2-1) (conn node0-0 node0-1) (key-shape key3 circle) (conn node1-0 node2-0) (conn node2-2 node3-2) (key-shape key1 circle) (conn node2-3 node1-3) (conn node2-0 node2-1) (conn node3-2 node3-1) (open node1-0) (open node3-1) (conn node2-1 node2-0) (conn node3-2 node2-2) (open node2-2) (open node3-0) (conn node2-2 node1-2) (conn node3-1 node2-1) (open node3-3) (conn node1-0 node1-1) (conn node1-0 node0-0) (conn node2-2 node2-3) (open node0-0) (conn node3-0 node2-0) (open node1-1) (conn node2-1 node3-1) (conn node0-1 node0-2) (conn node2-2 node2-1) (conn node1-2 node0-2) (conn node0-3 node1-3) (conn node2-1 node1-1) (lock-shape node3-3 circle) (open node2-3) (conn node3-3 node3-2) (conn node3-2 node3-3) (conn node0-3 node0-2) (conn node2-3 node3-3) (open node2-0) (conn node1-3 node2-3) (lock-shape node2-3 circle) (conn node0-2 node0-1) (conn node1-2 node1-1) (conn node0-2 node1-2) (at key1 node0-2) (conn node1-2 node2-2) (conn node1-2 node1-3) (conn node0-2 node0-3) (open node1-3) (conn node1-3 node1-2) (conn node0-1 node1-1) (lock-shape node3-1 circle) (open node0-2) (conn node2-1 node2-2) (conn node3-1 node3-2) (lock-shape node3-2 circle) (key-shape key0 circle) (conn node1-3 node0-3) (conn node3-1 node3-0) (conn node2-3 node2-2) (open node0-3) (key-shape key2 circle) (conn node3-0 node3-1) (conn node0-0 node1-0) (conn node3-3 node2-3) (lock-shape node1-3 circle) (open node2-1) (at key2 node2-3) (at-robot node2-2) (open node3-2) (arm-empty ) (at key3 node2-2))

(move node2-2 node2-3)

(:observations (lock-shape node2-2 circle) (lock-shape node2-1 circle) (conn node0-1 node0-0) (conn node2-0 node1-0) (open node0-1) (conn node1-1 node0-1) (conn node1-1 node1-2) (conn node2-0 node3-0) (at key0 node0-1) (open node1-2) (conn node1-1 node1-0) (conn node1-1 node2-1) (conn node0-0 node0-1) (key-shape key3 circle) (conn node1-0 node2-0) (conn node2-2 node3-2) (key-shape key1 circle) (conn node2-3 node1-3) (conn node2-0 node2-1) (conn node3-2 node3-1) (open node1-0) (open node3-1) (conn node2-1 node2-0) (conn node3-2 node2-2) (open node2-2) (open node3-0) (conn node2-2 node1-2) (conn node3-1 node2-1) (open node3-3) (conn node1-0 node1-1) (conn node1-0 node0-0) (conn node2-2 node2-3) (open node0-0) (conn node3-0 node2-0) (open node1-1) (conn node2-1 node3-1) (conn node0-1 node0-2) (conn node2-2 node2-1) (conn node1-2 node0-2) (conn node0-3 node1-3) (conn node2-1 node1-1) (lock-shape node3-3 circle) (open node2-3) (conn node3-3 node3-2) (conn node3-2 node3-3) (conn node0-3 node0-2) (conn node2-3 node3-3) (open node2-0) (conn node1-3 node2-3) (lock-shape node2-3 circle) (conn node0-2 node0-1) (conn node1-2 node1-1) (conn node0-2 node1-2) (at key1 node0-2) (conn node1-2 node2-2) (conn node1-2 node1-3) (conn node0-2 node0-3) (open node1-3) (conn node1-3 node1-2) (conn node0-1 node1-1) (lock-shape node3-1 circle) (open node0-2) (conn node2-1 node2-2) (conn node3-1 node3-2) (lock-shape node3-2 circle) (key-shape key0 circle) (conn node1-3 node0-3) (conn node3-1 node3-0) (conn node2-3 node2-2) (open node0-3) (key-shape key2 circle) (conn node3-0 node3-1) (conn node0-0 node1-0) (conn node3-3 node2-3) (lock-shape node1-3 circle) (open node2-1) (at key2 node2-3) (open node3-2) (arm-empty ) (at key3 node2-2) (at-robot node2-3))

(pickup node2-3 key2)

(:observations (lock-shape node2-2 circle) (lock-shape node2-1 circle) (conn node0-1 node0-0) (conn node2-0 node1-0) (open node0-1) (conn node1-1 node0-1) (conn node1-1 node1-2) (conn node2-0 node3-0) (at key0 node0-1) (open node1-2) (conn node1-1 node1-0) (conn node1-1 node2-1) (conn node0-0 node0-1) (key-shape key3 circle) (conn node1-0 node2-0) (conn node2-2 node3-2) (key-shape key1 circle) (conn node2-3 node1-3) (conn node2-0 node2-1) (conn node3-2 node3-1) (open node1-0) (open node3-1) (conn node2-1 node2-0) (conn node3-2 node2-2) (open node2-2) (open node3-0) (conn node2-2 node1-2) (conn node3-1 node2-1) (open node3-3) (conn node1-0 node1-1) (conn node1-0 node0-0) (conn node2-2 node2-3) (open node0-0) (conn node3-0 node2-0) (open node1-1) (conn node2-1 node3-1) (conn node0-1 node0-2) (conn node2-2 node2-1) (conn node1-2 node0-2) (conn node0-3 node1-3) (conn node2-1 node1-1) (lock-shape node3-3 circle) (open node2-3) (conn node3-3 node3-2) (conn node3-2 node3-3) (conn node0-3 node0-2) (conn node2-3 node3-3) (open node2-0) (conn node1-3 node2-3) (lock-shape node2-3 circle) (conn node0-2 node0-1) (conn node1-2 node1-1) (conn node0-2 node1-2) (at key1 node0-2) (conn node1-2 node2-2) (conn node1-2 node1-3) (conn node0-2 node0-3) (open node1-3) (conn node1-3 node1-2) (conn node0-1 node1-1) (lock-shape node3-1 circle) (open node0-2) (conn node2-1 node2-2) (conn node3-1 node3-2) (lock-shape node3-2 circle) (key-shape key0 circle) (conn node1-3 node0-3) (conn node3-1 node3-0) (conn node2-3 node2-2) (open node0-3) (key-shape key2 circle) (conn node3-0 node3-1) (conn node0-0 node1-0) (conn node3-3 node2-3) (lock-shape node1-3 circle) (open node2-1) (open node3-2) (at key3 node2-2) (at-robot node2-3) (holding key2))

(putdown node2-3 key2)

(:observations (lock-shape node2-2 circle) (lock-shape node2-1 circle) (conn node0-1 node0-0) (conn node2-0 node1-0) (open node0-1) (conn node1-1 node0-1) (conn node1-1 node1-2) (conn node2-0 node3-0) (at key0 node0-1) (open node1-2) (conn node1-1 node1-0) (conn node1-1 node2-1) (conn node0-0 node0-1) (key-shape key3 circle) (conn node1-0 node2-0) (conn node2-2 node3-2) (key-shape key1 circle) (conn node2-3 node1-3) (conn node2-0 node2-1) (conn node3-2 node3-1) (open node1-0) (open node3-1) (conn node2-1 node2-0) (conn node3-2 node2-2) (open node2-2) (open node3-0) (conn node2-2 node1-2) (conn node3-1 node2-1) (open node3-3) (conn node1-0 node1-1) (conn node1-0 node0-0) (conn node2-2 node2-3) (open node0-0) (conn node3-0 node2-0) (open node1-1) (conn node2-1 node3-1) (conn node0-1 node0-2) (conn node2-2 node2-1) (conn node1-2 node0-2) (conn node0-3 node1-3) (conn node2-1 node1-1) (lock-shape node3-3 circle) (open node2-3) (conn node3-3 node3-2) (conn node3-2 node3-3) (conn node0-3 node0-2) (conn node2-3 node3-3) (open node2-0) (conn node1-3 node2-3) (lock-shape node2-3 circle) (conn node0-2 node0-1) (conn node1-2 node1-1) (conn node0-2 node1-2) (at key1 node0-2) (conn node1-2 node2-2) (conn node1-2 node1-3) (conn node0-2 node0-3) (open node1-3) (conn node1-3 node1-2) (conn node0-1 node1-1) (lock-shape node3-1 circle) (open node0-2) (conn node2-1 node2-2) (conn node3-1 node3-2) (lock-shape node3-2 circle) (key-shape key0 circle) (conn node1-3 node0-3) (conn node3-1 node3-0) (conn node2-3 node2-2) (open node0-3) (key-shape key2 circle) (conn node3-0 node3-1) (conn node0-0 node1-0) (conn node3-3 node2-3) (lock-shape node1-3 circle) (open node2-1) (open node3-2) (at key3 node2-2) (at-robot node2-3) (arm-empty ) (at key2 node2-3))

(move node2-3 node1-3)

(:observations (lock-shape node2-2 circle) (lock-shape node2-1 circle) (conn node0-1 node0-0) (conn node2-0 node1-0) (open node0-1) (conn node1-1 node0-1) (conn node1-1 node1-2) (conn node2-0 node3-0) (at key0 node0-1) (open node1-2) (conn node1-1 node1-0) (conn node1-1 node2-1) (conn node0-0 node0-1) (key-shape key3 circle) (conn node1-0 node2-0) (conn node2-2 node3-2) (key-shape key1 circle) (conn node2-3 node1-3) (conn node2-0 node2-1) (conn node3-2 node3-1) (open node1-0) (open node3-1) (conn node2-1 node2-0) (conn node3-2 node2-2) (open node2-2) (open node3-0) (conn node2-2 node1-2) (conn node3-1 node2-1) (open node3-3) (conn node1-0 node1-1) (conn node1-0 node0-0) (conn node2-2 node2-3) (open node0-0) (conn node3-0 node2-0) (open node1-1) (conn node2-1 node3-1) (conn node0-1 node0-2) (conn node2-2 node2-1) (conn node1-2 node0-2) (conn node0-3 node1-3) (conn node2-1 node1-1) (lock-shape node3-3 circle) (open node2-3) (conn node3-3 node3-2) (conn node3-2 node3-3) (conn node0-3 node0-2) (conn node2-3 node3-3) (open node2-0) (conn node1-3 node2-3) (lock-shape node2-3 circle) (conn node0-2 node0-1) (conn node1-2 node1-1) (conn node0-2 node1-2) (at key1 node0-2) (conn node1-2 node2-2) (conn node1-2 node1-3) (conn node0-2 node0-3) (open node1-3) (conn node1-3 node1-2) (conn node0-1 node1-1) (lock-shape node3-1 circle) (open node0-2) (conn node2-1 node2-2) (conn node3-1 node3-2) (lock-shape node3-2 circle) (key-shape key0 circle) (conn node1-3 node0-3) (conn node3-1 node3-0) (conn node2-3 node2-2) (open node0-3) (key-shape key2 circle) (conn node3-0 node3-1) (conn node0-0 node1-0) (conn node3-3 node2-3) (lock-shape node1-3 circle) (open node2-1) (open node3-2) (at key3 node2-2) (arm-empty ) (at key2 node2-3) (at-robot node1-3))

(move node1-3 node0-3)

(:observations (lock-shape node2-2 circle) (lock-shape node2-1 circle) (conn node0-1 node0-0) (conn node2-0 node1-0) (open node0-1) (conn node1-1 node0-1) (conn node1-1 node1-2) (conn node2-0 node3-0) (at key0 node0-1) (open node1-2) (conn node1-1 node1-0) (conn node1-1 node2-1) (conn node0-0 node0-1) (key-shape key3 circle) (conn node1-0 node2-0) (conn node2-2 node3-2) (key-shape key1 circle) (conn node2-3 node1-3) (conn node2-0 node2-1) (conn node3-2 node3-1) (open node1-0) (open node3-1) (conn node2-1 node2-0) (conn node3-2 node2-2) (open node2-2) (open node3-0) (conn node2-2 node1-2) (conn node3-1 node2-1) (open node3-3) (conn node1-0 node1-1) (conn node1-0 node0-0) (conn node2-2 node2-3) (open node0-0) (conn node3-0 node2-0) (open node1-1) (conn node2-1 node3-1) (conn node0-1 node0-2) (conn node2-2 node2-1) (conn node1-2 node0-2) (conn node0-3 node1-3) (conn node2-1 node1-1) (lock-shape node3-3 circle) (open node2-3) (conn node3-3 node3-2) (conn node3-2 node3-3) (conn node0-3 node0-2) (conn node2-3 node3-3) (open node2-0) (conn node1-3 node2-3) (lock-shape node2-3 circle) (conn node0-2 node0-1) (conn node1-2 node1-1) (conn node0-2 node1-2) (at key1 node0-2) (conn node1-2 node2-2) (conn node1-2 node1-3) (conn node0-2 node0-3) (open node1-3) (conn node1-3 node1-2) (conn node0-1 node1-1) (lock-shape node3-1 circle) (open node0-2) (conn node2-1 node2-2) (conn node3-1 node3-2) (lock-shape node3-2 circle) (key-shape key0 circle) (conn node1-3 node0-3) (conn node3-1 node3-0) (conn node2-3 node2-2) (open node0-3) (key-shape key2 circle) (conn node3-0 node3-1) (conn node0-0 node1-0) (conn node3-3 node2-3) (lock-shape node1-3 circle) (open node2-1) (open node3-2) (at key3 node2-2) (arm-empty ) (at key2 node2-3) (at-robot node0-3))

(move node0-3 node0-2)

(:goal (lock-shape node2-2 circle) (lock-shape node2-1 circle) (conn node0-1 node0-0) (conn node2-0 node1-0) (open node0-1) (conn node1-1 node0-1) (conn node1-1 node1-2) (conn node2-0 node3-0) (at key0 node0-1) (open node1-2) (conn node1-1 node1-0) (conn node1-1 node2-1) (conn node0-0 node0-1) (key-shape key3 circle) (conn node1-0 node2-0) (conn node2-2 node3-2) (key-shape key1 circle) (conn node2-3 node1-3) (conn node2-0 node2-1) (conn node3-2 node3-1) (open node1-0) (open node3-1) (conn node2-1 node2-0) (conn node3-2 node2-2) (open node2-2) (open node3-0) (conn node2-2 node1-2) (conn node3-1 node2-1) (open node3-3) (conn node1-0 node1-1) (conn node1-0 node0-0) (conn node2-2 node2-3) (open node0-0) (conn node3-0 node2-0) (open node1-1) (conn node2-1 node3-1) (conn node0-1 node0-2) (conn node2-2 node2-1) (conn node1-2 node0-2) (conn node0-3 node1-3) (conn node2-1 node1-1) (lock-shape node3-3 circle) (open node2-3) (conn node3-3 node3-2) (conn node3-2 node3-3) (conn node0-3 node0-2) (conn node2-3 node3-3) (open node2-0) (conn node1-3 node2-3) (lock-shape node2-3 circle) (conn node0-2 node0-1) (conn node1-2 node1-1) (conn node0-2 node1-2) (at key1 node0-2) (conn node1-2 node2-2) (conn node1-2 node1-3) (conn node0-2 node0-3) (open node1-3) (conn node1-3 node1-2) (conn node0-1 node1-1) (lock-shape node3-1 circle) (open node0-2) (conn node2-1 node2-2) (conn node3-1 node3-2) (lock-shape node3-2 circle) (key-shape key0 circle) (conn node1-3 node0-3) (conn node3-1 node3-0) (conn node2-3 node2-2) (open node0-3) (key-shape key2 circle) (conn node3-0 node3-1) (conn node0-0 node1-0) (conn node3-3 node2-3) (lock-shape node1-3 circle) (open node2-1) (open node3-2) (at key3 node2-2) (arm-empty ) (at key2 node2-3) (at-robot node0-2)))
