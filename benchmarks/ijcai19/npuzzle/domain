(define (domain n-puzzle)
  (:requirements :typing)
  (:types position tile)
  (:predicates (at ?tile - tile ?position - position)
	       (neighbor ?p1 - position ?p2 - position) 
	       (empty ?position - position)
   )


(:derived (invariant-1)
	(forall(?x - position ?y1 - tile ?y2 - tile)
		(not (and  (at ?y1 ?x)  (at ?y2 ?x) (not (= ?y1 ?y2)) ))))
(:derived (invariant-2)
	(forall (?y1 - tile ?x - position)
		(not (and (at ?y1 ?x) (empty ?x)))))
(:derived (invariant-3)
	(forall(?x - tile ?y1 - position ?y2 - position)
		(not (and  (at ?x ?y1)  (at ?x ?y2) (not (= ?y1 ?y2)) ))))


  (:action move
     :parameters (?o1 - tile ?o2 ?o3 - position)
     :precondition ()
     :effect ())  
)