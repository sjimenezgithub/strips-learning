(solution 
(:objects node3-2 -  place node0-2 -  place node3-3 -  place key2 -  key node0-3 -  place node1-1 -  place node0-1 -  place circle -  shape node2-0 -  place node1-2 -  place key3 -  key node2-1 -  place key1 -  key node3-1 -  place node1-0 -  place node1-3 -  place node3-0 -  place key0 -  key node2-2 -  place node0-0 -  place node2-3 -  place )
(:init (conn node2-1 node1-1) (conn node2-0 node3-0) (conn node0-1 node0-0) (locked node2-3) (conn node1-0 node0-0) (open node2-2) (conn node0-1 node0-2) (open node1-3) (conn node1-1 node1-2) (conn node3-2 node3-3) (open node0-1) (at key0 node0-0) (lock-shape node3-2 circle) (conn node2-2 node1-2) (conn node1-3 node1-2) (conn node0-2 node0-1) (conn node3-2 node3-1) (conn node1-3 node0-3) (conn node2-0 node2-1) (conn node1-0 node1-1) (conn node1-1 node1-0) (conn node2-2 node2-3) (conn node2-1 node2-0) (conn node3-1 node3-0) (conn node3-3 node2-3) (lock-shape node3-3 circle) (open node2-0) (conn node2-1 node2-2) (conn node0-2 node0-3) (conn node2-3 node2-2) (locked node2-1) (conn node2-2 node3-2) (at key1 node1-3) (conn node0-1 node1-1) (locked node3-1) (at-robot node0-2) (open node0-3) (open node0-0) (open node1-0) (open node1-2) (conn node3-0 node2-0) (conn node3-3 node3-2) (lock-shape node2-2 circle) (lock-shape node3-1 circle) (open node3-0) (at key2 node1-2) (lock-shape node2-3 circle) (lock-shape node1-3 circle) (conn node1-1 node2-1) (conn node1-2 node0-2) (conn node1-2 node1-1) (conn node3-1 node3-2) (locked node3-2) (key-shape key0 circle) (conn node1-1 node0-1) (conn node3-1 node2-1) (lock-shape node2-1 circle) (conn node0-3 node1-3) (conn node2-3 node1-3) (conn node3-0 node3-1) (at key3 node2-3) (open node0-2) (conn node3-2 node2-2) (open node1-1) (conn node1-2 node2-2) (key-shape key3 circle) (conn node1-2 node1-3) (locked node3-3) (arm-empty ) (conn node2-3 node3-3) (conn node2-2 node2-1) (conn node2-0 node1-0) (conn node1-3 node2-3) (conn node0-2 node1-2) (key-shape key2 circle) (conn node0-0 node1-0) (conn node2-1 node3-1) (key-shape key1 circle) (conn node1-0 node2-0) (conn node0-3 node0-2) (conn node0-0 node0-1) )
(:observations (conn node2-1 node1-1) (conn node2-0 node3-0) (conn node0-1 node0-0) (locked node2-3) (conn node1-0 node0-0) (open node2-2) (conn node0-1 node0-2) (open node1-3) (conn node1-1 node1-2) (conn node3-2 node3-3) (open node0-1) (at key0 node0-0) (lock-shape node3-2 circle) (conn node2-2 node1-2) (conn node1-3 node1-2) (conn node0-2 node0-1) (conn node3-2 node3-1) (conn node1-3 node0-3) (conn node2-0 node2-1) (conn node1-0 node1-1) (conn node1-1 node1-0) (conn node2-2 node2-3) (conn node2-1 node2-0) (conn node3-1 node3-0) (conn node3-3 node2-3) (lock-shape node3-3 circle) (open node2-0) (conn node2-1 node2-2) (conn node0-2 node0-3) (conn node2-3 node2-2) (locked node2-1) (conn node2-2 node3-2) (at key1 node1-3) (conn node0-1 node1-1) (locked node3-1) (at-robot node0-2) (open node0-3) (open node0-0) (open node1-0) (open node1-2) (conn node3-0 node2-0) (conn node3-3 node3-2) (lock-shape node2-2 circle) (lock-shape node3-1 circle) (open node3-0) (at key2 node1-2) (lock-shape node2-3 circle) (lock-shape node1-3 circle) (conn node1-1 node2-1) (conn node1-2 node0-2) (conn node1-2 node1-1) (conn node3-1 node3-2) (locked node3-2) (key-shape key0 circle) (conn node1-1 node0-1) (conn node3-1 node2-1) (lock-shape node2-1 circle) (conn node0-3 node1-3) (conn node2-3 node1-3) (conn node3-0 node3-1) (at key3 node2-3) (open node0-2) (conn node3-2 node2-2) (open node1-1) (conn node1-2 node2-2) (key-shape key3 circle) (conn node1-2 node1-3) (locked node3-3) (arm-empty ) (conn node2-3 node3-3) (conn node2-2 node2-1) (conn node2-0 node1-0) (conn node1-3 node2-3) (conn node0-2 node1-2) (key-shape key2 circle) (conn node0-0 node1-0) (conn node2-1 node3-1) (key-shape key1 circle) (conn node1-0 node2-0) (conn node0-3 node0-2) (conn node0-0 node0-1) )

(move node0-2 node1-2)

(:observations (conn node2-1 node1-1) (conn node2-0 node3-0) (conn node0-1 node0-0) (locked node2-3) (conn node1-0 node0-0) (open node2-2) (conn node0-1 node0-2) (open node1-3) (conn node1-1 node1-2) (conn node3-2 node3-3) (open node0-1) (at key0 node0-0) (lock-shape node3-2 circle) (conn node2-2 node1-2) (conn node1-3 node1-2) (conn node0-2 node0-1) (conn node3-2 node3-1) (conn node1-3 node0-3) (conn node2-0 node2-1) (conn node1-0 node1-1) (conn node1-1 node1-0) (conn node2-2 node2-3) (conn node2-1 node2-0) (conn node3-1 node3-0) (conn node3-3 node2-3) (lock-shape node3-3 circle) (open node2-0) (conn node2-1 node2-2) (conn node0-2 node0-3) (conn node2-3 node2-2) (locked node2-1) (conn node2-2 node3-2) (at key1 node1-3) (conn node0-1 node1-1) (locked node3-1) (conn node3-3 node3-2) (open node0-3) (open node0-0) (open node1-0) (open node1-2) (conn node3-0 node2-0) (lock-shape node2-2 circle) (lock-shape node3-1 circle) (open node3-0) (at key2 node1-2) (lock-shape node2-3 circle) (lock-shape node1-3 circle) (conn node1-1 node2-1) (conn node1-2 node0-2) (conn node1-2 node1-1) (conn node3-1 node3-2) (locked node3-2) (key-shape key0 circle) (conn node1-1 node0-1) (conn node3-1 node2-1) (at-robot node1-2) (lock-shape node2-1 circle) (conn node0-3 node1-3) (conn node2-3 node1-3) (conn node3-0 node3-1) (at key3 node2-3) (open node0-2) (conn node3-2 node2-2) (open node1-1) (conn node1-2 node2-2) (key-shape key3 circle) (conn node1-2 node1-3) (locked node3-3) (arm-empty ) (conn node2-3 node3-3) (conn node2-2 node2-1) (conn node2-0 node1-0) (conn node1-3 node2-3) (conn node0-2 node1-2) (key-shape key2 circle) (conn node0-0 node1-0) (conn node2-1 node3-1) (key-shape key1 circle) (conn node1-0 node2-0) (conn node0-3 node0-2) (conn node0-0 node0-1) )

(pickup node1-2 key2)

(:observations (conn node2-1 node1-1) (conn node2-0 node3-0) (conn node0-1 node0-0) (locked node2-3) (conn node1-0 node0-0) (open node2-2) (conn node3-2 node3-1) (open node1-3) (open node3-0) (conn node3-2 node3-3) (open node0-1) (at key0 node0-0) (lock-shape node3-2 circle) (conn node2-2 node1-2) (conn node1-3 node1-2) (conn node0-2 node0-1) (conn node1-1 node1-2) (conn node1-3 node0-3) (conn node2-0 node2-1) (conn node1-0 node1-1) (conn node1-1 node1-0) (conn node2-2 node2-3) (conn node2-1 node2-0) (conn node3-1 node3-0) (conn node3-3 node2-3) (lock-shape node3-3 circle) (open node2-0) (conn node2-1 node2-2) (conn node0-2 node0-3) (conn node2-3 node2-2) (locked node2-1) (conn node2-2 node3-2) (at key1 node1-3) (conn node0-1 node1-1) (locked node3-1) (conn node0-1 node0-2) (open node0-3) (open node0-0) (open node1-0) (open node1-2) (conn node3-0 node2-0) (conn node3-3 node3-2) (lock-shape node2-2 circle) (lock-shape node3-1 circle) (conn node1-0 node2-0) (lock-shape node2-3 circle) (lock-shape node1-3 circle) (conn node1-1 node2-1) (conn node1-2 node0-2) (conn node1-2 node1-1) (conn node3-1 node3-2) (locked node3-2) (key-shape key0 circle) (conn node1-1 node0-1) (conn node3-1 node2-1) (at-robot node1-2) (lock-shape node2-1 circle) (conn node0-3 node1-3) (conn node2-3 node1-3) (conn node3-0 node3-1) (at key3 node2-3) (open node0-2) (conn node3-2 node2-2) (open node1-1) (conn node1-2 node2-2) (key-shape key3 circle) (conn node1-2 node1-3) (locked node3-3) (conn node2-3 node3-3) (conn node2-2 node2-1) (conn node2-0 node1-0) (conn node1-3 node2-3) (conn node0-2 node1-2) (key-shape key2 circle) (conn node0-0 node1-0) (conn node2-1 node3-1) (key-shape key1 circle) (conn node0-3 node0-2) (holding key2) (conn node0-0 node0-1) )

(move node1-2 node1-3)

(:observations (conn node2-1 node1-1) (conn node2-0 node3-0) (conn node0-1 node0-0) (locked node2-3) (conn node1-0 node0-0) (open node2-2) (conn node3-2 node3-1) (open node1-3) (open node3-0) (conn node3-2 node3-3) (open node0-1) (at key0 node0-0) (lock-shape node3-2 circle) (conn node2-2 node1-2) (conn node1-3 node1-2) (conn node0-2 node0-1) (conn node1-1 node1-2) (conn node1-3 node0-3) (conn node2-0 node2-1) (conn node1-0 node1-1) (conn node1-1 node1-0) (conn node2-2 node2-3) (conn node2-1 node2-0) (conn node3-1 node3-0) (conn node3-3 node2-3) (lock-shape node3-3 circle) (open node2-0) (conn node2-1 node2-2) (conn node0-2 node0-3) (conn node2-3 node2-2) (locked node2-1) (conn node2-2 node3-2) (at key1 node1-3) (conn node0-1 node1-1) (locked node3-1) (conn node0-1 node0-2) (open node0-3) (open node0-0) (open node1-0) (open node1-2) (conn node3-0 node2-0) (conn node3-3 node3-2) (lock-shape node2-2 circle) (lock-shape node3-1 circle) (conn node1-0 node2-0) (lock-shape node2-3 circle) (lock-shape node1-3 circle) (conn node1-1 node2-1) (conn node1-2 node0-2) (conn node1-2 node1-1) (conn node3-1 node3-2) (locked node3-2) (key-shape key0 circle) (conn node1-1 node0-1) (at-robot node1-3) (conn node3-1 node2-1) (lock-shape node2-1 circle) (conn node0-3 node1-3) (conn node2-3 node1-3) (conn node3-0 node3-1) (at key3 node2-3) (open node0-2) (conn node3-2 node2-2) (open node1-1) (conn node1-2 node2-2) (key-shape key3 circle) (conn node1-2 node1-3) (locked node3-3) (conn node2-3 node3-3) (conn node2-2 node2-1) (conn node2-0 node1-0) (conn node1-3 node2-3) (conn node0-2 node1-2) (key-shape key2 circle) (conn node0-0 node1-0) (conn node2-1 node3-1) (key-shape key1 circle) (conn node0-3 node0-2) (holding key2) (conn node0-0 node0-1) )

(pickup-and-loose node1-3 key1 key2)

(:observations (conn node2-1 node1-1) (conn node2-0 node3-0) (conn node0-1 node0-0) (locked node2-3) (conn node1-0 node0-0) (open node2-2) (conn node3-2 node3-1) (open node1-3) (open node3-0) (conn node3-2 node3-3) (open node0-1) (at key0 node0-0) (lock-shape node3-2 circle) (conn node2-2 node1-2) (conn node1-3 node1-2) (conn node0-2 node0-1) (conn node1-1 node1-2) (conn node1-3 node0-3) (conn node2-0 node2-1) (conn node1-0 node1-1) (conn node1-1 node1-0) (conn node2-2 node2-3) (conn node2-1 node2-0) (conn node3-1 node3-0) (conn node3-3 node2-3) (lock-shape node3-3 circle) (open node2-0) (conn node2-1 node2-2) (conn node0-2 node0-3) (conn node2-3 node2-2) (locked node2-1) (conn node2-2 node3-2) (conn node0-1 node1-1) (locked node3-1) (conn node0-1 node0-2) (open node0-3) (open node0-0) (open node1-0) (open node1-2) (conn node3-0 node2-0) (conn node3-3 node3-2) (lock-shape node2-2 circle) (lock-shape node3-1 circle) (conn node1-0 node2-0) (lock-shape node2-3 circle) (lock-shape node1-3 circle) (conn node1-1 node2-1) (conn node1-2 node0-2) (conn node1-2 node1-1) (conn node3-1 node3-2) (locked node3-2) (key-shape key0 circle) (conn node1-1 node0-1) (at-robot node1-3) (conn node3-1 node2-1) (lock-shape node2-1 circle) (conn node0-3 node1-3) (at key2 node1-3) (conn node2-3 node1-3) (conn node3-0 node3-1) (at key3 node2-3) (open node0-2) (conn node3-2 node2-2) (open node1-1) (conn node1-2 node2-2) (key-shape key3 circle) (conn node1-2 node1-3) (locked node3-3) (conn node2-3 node3-3) (conn node2-2 node2-1) (conn node2-0 node1-0) (conn node1-3 node2-3) (conn node0-2 node1-2) (key-shape key2 circle) (conn node0-0 node1-0) (conn node2-1 node3-1) (key-shape key1 circle) (holding key1) (conn node0-3 node0-2) (conn node0-0 node0-1) )

(move node1-3 node1-2)

(:goal (conn node2-3 node2-2)(conn node3-1 node3-2)(conn node0-2 node1-2)(conn node1-1 node0-1)(conn node0-1 node0-2)(conn node2-2 node1-2)(locked node3-2)(open node2-2)(conn node2-0 node2-1)(conn node3-0 node3-1)(key-shape key1 circle)(conn node0-1 node0-0)(conn node1-1 node1-0)(at key0 node0-0)(conn node1-1 node2-1)(conn node2-1 node3-1)(conn node3-3 node3-2)(conn node0-3 node0-2)(conn node3-2 node3-1)(conn node2-3 node3-3)(lock-shape node3-2 circle)(conn node1-0 node2-0)(locked node3-3)(conn node0-3 node1-3)(conn node1-3 node2-3)(lock-shape node3-1 circle)(open node0-1)(conn node1-0 node1-1)(conn node0-0 node1-0)(conn node2-2 node3-2)(conn node0-2 node0-1)(locked node2-1)(conn node2-1 node1-1)(conn node2-0 node3-0)(key-shape key0 circle)(conn node3-2 node2-2)(conn node3-2 node3-3)(conn node3-3 node2-3)(open node0-3)(conn node1-0 node0-0)(open node2-0)(locked node2-3)(open node1-3)(lock-shape node1-3 circle)(at key3 node2-3)(lock-shape node2-2 circle)(conn node2-3 node1-3)(open node1-2)(locked node3-1)(conn node3-0 node2-0)(key-shape key3 circle)(open node1-0)(open node0-2)(conn node0-2 node0-3)(conn node1-2 node2-2)(conn node2-0 node1-0)(conn node1-2 node1-1)(conn node2-2 node2-1)(lock-shape node3-3 circle)(conn node1-3 node1-2)(conn node0-1 node1-1)(conn node2-2 node2-3)(conn node3-1 node3-0)(conn node1-1 node1-2)(open node0-0)(open node1-1)(conn node3-1 node2-1)(open node3-0)(conn node1-3 node0-3)(conn node2-1 node2-0)(lock-shape node2-3 circle)(conn node1-2 node0-2)(conn node0-0 node0-1)(lock-shape node2-1 circle)(conn node2-1 node2-2)(key-shape key2 circle)(conn node1-2 node1-3)(holding key1)(at key2 node1-3)(at-robot node1-2)))